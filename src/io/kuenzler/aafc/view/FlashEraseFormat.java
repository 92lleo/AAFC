package io.kuenzler.aafc.view;

import io.kuenzler.aafc.control.Aafc;
import io.kuenzler.aafc.control.Executer;

import java.awt.Toolkit;

/**
 * GUI to create flash/erase/format fastboot commands Possible to run/push to
 * execution line
 *
 * @author Leonhard KÃ¼nzler
 * @date 22.06.13
 */
public class FlashEraseFormat extends Model {

    Aafc main;

    /**
     * Creates new form FastbootFlashEraseFormat
     */
    public FlashEraseFormat(Aafc main) {
    	super(200, 200); 
        initComponents();
        this.main = main;
        //mode to fastboot!
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CB_flasherase = new javax.swing.JComboBox();
        CB_partition = new javax.swing.JComboBox();
        t_flash = new javax.swing.JTextField();
        l_action = new javax.swing.JLabel();
        l_partition = new javax.swing.JLabel();
        l_image = new javax.swing.JLabel();
        b_run = new javax.swing.JButton();
        b_execute = new javax.swing.JButton();
        b_batch = new javax.swing.JButton();
        b_close = new javax.swing.JButton();
        CB_changeMode = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Flash or wipe partition\r\n");
        //setBounds(new java.awt.Rectangle(300, 300, 0, 0));
        setName("Commandbuilder"); // NOI18N

        CB_flasherase.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "flash", "erase", "format" }));
        CB_flasherase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CB_flasheraseActionPerformed(evt);
            }
        });

        CB_partition.setEditable(true);
        CB_partition.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "recovery", "boot", "system", "cache", "userdata", "sdcard" }));
        CB_partition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CB_partitionActionPerformed(evt);
            }
        });

        t_flash.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t_flashMouseClicked(evt);
            }
        });
        t_flash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_flashActionPerformed(evt);
            }
        });

        l_action.setText("Action");

        l_partition.setText("Partition");

        l_image.setText("File");

        b_run.setText("Run!");
        b_run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_runActionPerformed(evt);
            }
        });

        b_execute.setText("To executeline");
        b_execute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_executeActionPerformed(evt);
            }
        });

        b_batch.setText("To batchwindow");
        b_batch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_batchActionPerformed(evt);
            }
        });

        b_close.setText("Close");
        b_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_closeActionPerformed(evt);
            }
        });

        CB_changeMode.setText("Change mode to fastboot before executing command");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CB_changeMode, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(b_run, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(l_action, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CB_flasherase, 0, 77, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CB_partition, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(l_partition))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(l_image)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(t_flash)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(b_execute)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_batch)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                                .addComponent(b_close)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_action)
                    .addComponent(l_partition)
                    .addComponent(l_image))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CB_flasherase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CB_partition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_flash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(CB_changeMode)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_run)
                    .addComponent(b_execute)
                    .addComponent(b_batch)
                    .addComponent(b_close))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CB_partitionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CB_partitionActionPerformed
        //useless
    }//GEN-LAST:event_CB_partitionActionPerformed

    private void CB_flasheraseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CB_flasheraseActionPerformed
        if (CB_flasherase.getSelectedIndex() == 0) {
            t_flash.setVisible(true);
        } else {
            t_flash.setVisible(false);
        }
    }//GEN-LAST:event_CB_flasheraseActionPerformed

    private void t_flashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_flashActionPerformed
        t_flash.setText(main.chooseFileString("Select image", false, "Insert", ""));
        main.updateCommandline(main.chooseFileString("Select image", false, "Insert", ""));
    }//GEN-LAST:event_t_flashActionPerformed

    private void b_runActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_runActionPerformed
        if (CB_changeMode.isSelected()) {
            main.setMode(Executer.FASTBOOT);
        }
        main.runCommand(createCommand(), Executer.FASTBOOT, true, true);
        main.updateCommandline(createCommand());
        dispose();
    }//GEN-LAST:event_b_runActionPerformed

    private void b_executeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_executeActionPerformed
        if (CB_changeMode.isSelected()) {
            main.setMode(Executer.FASTBOOT);
        }
        main.updateExecuteline(createCommand(), true);
        dispose();
    }//GEN-LAST:event_b_executeActionPerformed

    private void b_batchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_batchActionPerformed
        if (CB_changeMode.isSelected()) {
            main.updateBatch("mode fastboot");
        }
        main.updateBatch(createCommand());
        dispose();
    }//GEN-LAST:event_b_batchActionPerformed

    private void t_flashMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t_flashMouseClicked
        t_flash.setText(main.chooseFileString("Select image", false, "Insert", ""));
    }//GEN-LAST:event_t_flashMouseClicked

    private void b_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_closeActionPerformed
        dispose();
    }//GEN-LAST:event_b_closeActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CB_changeMode;
    private javax.swing.JComboBox CB_flasherase;
    private javax.swing.JComboBox CB_partition;
    private javax.swing.JButton b_batch;
    private javax.swing.JButton b_close;
    private javax.swing.JButton b_execute;
    private javax.swing.JButton b_run;
    private javax.swing.JLabel l_action;
    private javax.swing.JLabel l_image;
    private javax.swing.JLabel l_partition;
    private javax.swing.JTextField t_flash;
    // End of variables declaration//GEN-END:variables

    private String createCommand() {
        String command = "";
        command += CB_flasherase.getSelectedItem() + " ";
        command += CB_partition.getSelectedItem();
        if (CB_flasherase.getSelectedIndex() == 0) {
            command += " " + t_flash.getText();
        }
        return command;
    }

    private void changeMode() {
        if (CB_changeMode.isSelected()) {
            main.setMode(Executer.FASTBOOT);
        }
    }
}
